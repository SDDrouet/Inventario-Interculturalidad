# ============================================
# NAMESPACE
# ============================================
apiVersion: v1
kind: Namespace
metadata:
  name: inventory-app

---
# ============================================
# PERSISTENT VOLUMES
# ============================================
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-auth-pv
  namespace: inventory-app
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: /mnt/data/mongo-auth

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-inventory-pv
  namespace: inventory-app
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: /mnt/data/mongo-inventory

---
# ============================================
# PERSISTENT VOLUME CLAIMS
# ============================================
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-auth-pvc
  namespace: inventory-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: manual

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-inventory-pvc
  namespace: inventory-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: manual

---
# ============================================
# MONGODB AUTH - DEPLOYMENT
# ============================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-auth
  namespace: inventory-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-auth
  template:
    metadata:
      labels:
        app: mongodb-auth
    spec:
      containers:
      - name: mongodb-auth
        image: mongo:latest
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-auth-storage
          mountPath: /data/db
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: mongo-auth-storage
        persistentVolumeClaim:
          claimName: mongo-auth-pvc

---
# ============================================
# MONGODB AUTH - SERVICE
# ============================================
apiVersion: v1
kind: Service
metadata:
  name: mongodb-auth-service
  namespace: inventory-app
spec:
  selector:
    app: mongodb-auth
  ports:
  - port: 27017
    targetPort: 27017
  type: ClusterIP

---
# ============================================
# MONGODB INVENTORY - DEPLOYMENT
# ============================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-inventory
  namespace: inventory-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-inventory
  template:
    metadata:
      labels:
        app: mongodb-inventory
    spec:
      containers:
      - name: mongodb-inventory
        image: mongo:latest
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-inventory-storage
          mountPath: /data/db
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: mongo-inventory-storage
        persistentVolumeClaim:
          claimName: mongo-inventory-pvc

---
# ============================================
# MONGODB INVENTORY - SERVICE
# ============================================
apiVersion: v1
kind: Service
metadata:
  name: mongodb-inventory-service
  namespace: inventory-app
spec:
  selector:
    app: mongodb-inventory
  ports:
  - port: 27017
    targetPort: 27017
  type: ClusterIP

---
# ============================================
# AUTH SERVICE - DEPLOYMENT
# ============================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: inventory-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
      - name: auth-service
        image: auth-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 3120
        env:
        - name: MONGO_URI
          value: "mongodb://mongodb-auth-service:27017/microservicioAuth"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"



---
# ============================================
# AUTH SERVICE - SERVICE
# ============================================
# AUTH SERVICE - SERVICE (NodePort para localhost)
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: inventory-app
spec:
  selector:
    app: auth-service
  type: NodePort
  ports:
    - name: http
      port: 3120
      targetPort: 3120
      nodePort: 31200  # Expuesto a localhost:31200

---
# ============================================
# INVENTORY SERVICE - DEPLOYMENT
# ============================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-service
  namespace: inventory-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: inventory-service
  template:
    metadata:
      labels:
        app: inventory-service
    spec:
      containers:
      - name: inventory-service
        image: inventory-service:latest  # Cambiar por tu imagen real
        imagePullPolicy: Never
        ports:
        - containerPort: 3120
        env:
        - name: MONGO_URI
          value: "mongodb://mongodb-inventory-service:27017/inventario"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"

---
# ============================================
# INVENTORY SERVICE - SERVICE
# ============================================
# INVENTORY SERVICE - SERVICE (NodePort para localhost)
apiVersion: v1
kind: Service
metadata:
  name: inventory-service
  namespace: inventory-app
spec:
  selector:
    app: inventory-service
  type: NodePort
  ports:
    - name: http
      port: 3121
      targetPort: 3120
      nodePort: 31201  # Expuesto a localhost:31201

---
# ============================================
# CLIENT APP - DEPLOYMENT
# ============================================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-app
  namespace: inventory-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: client-app
  template:
    metadata:
      labels:
        app: client-app
    spec:
      containers:
      - name: client-app
        image: client-app:latest  # Cambiar por tu imagen real
        imagePullPolicy: Never
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5

---
# ============================================
# CLIENT APP - SERVICE
# ============================================
apiVersion: v1
kind: Service
metadata:
  name: client-app-service
  namespace: inventory-app
spec:
  selector:
    app: client-app
  ports:
  - port: 80
    targetPort: 80
  type: LoadBalancer  # Cambiar a NodePort si no tienes LoadBalancer

---
# ============================================
# INGRESS (Opcional)
# ============================================
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: inventory-app-ingress
  namespace: inventory-app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: inventory-app.local  # Cambiar por tu dominio
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: client-app-service
            port:
              number: 80
      - path: /api/auth
        pathType: Prefix
        backend:
          service:
            name: auth-service
            port:
              number: 3120
      - path: /api/inventory
        pathType: Prefix
        backend:
          service:
            name: inventory-service
            port:
              number: 3120